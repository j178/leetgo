// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: question.proto

package leetcode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CategoryTitle int32

const (
	CategoryTitle_CATEGORY_TITLE_UNSPECIFIED CategoryTitle = 0
	CategoryTitle_ALGORITHMS                 CategoryTitle = 1
	CategoryTitle_DATABASE                   CategoryTitle = 2
	CategoryTitle_SHELL                      CategoryTitle = 3
	CategoryTitle_CONCURRENCY                CategoryTitle = 4
	CategoryTitle_JAVASCRIPT                 CategoryTitle = 5
)

// Enum value maps for CategoryTitle.
var (
	CategoryTitle_name = map[int32]string{
		0: "CATEGORY_TITLE_UNSPECIFIED",
		1: "ALGORITHMS",
		2: "DATABASE",
		3: "SHELL",
		4: "CONCURRENCY",
		5: "JAVASCRIPT",
	}
	CategoryTitle_value = map[string]int32{
		"CATEGORY_TITLE_UNSPECIFIED": 0,
		"ALGORITHMS":                 1,
		"DATABASE":                   2,
		"SHELL":                      3,
		"CONCURRENCY":                4,
		"JAVASCRIPT":                 5,
	}
)

func (x CategoryTitle) Enum() *CategoryTitle {
	p := new(CategoryTitle)
	*p = x
	return p
}

func (x CategoryTitle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CategoryTitle) Descriptor() protoreflect.EnumDescriptor {
	return file_question_proto_enumTypes[0].Descriptor()
}

func (CategoryTitle) Type() protoreflect.EnumType {
	return &file_question_proto_enumTypes[0]
}

func (x CategoryTitle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CategoryTitle.Descriptor instead.
func (CategoryTitle) EnumDescriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{0}
}

type EditorType int32

const (
	EditorType_EDITOR_TYPE_UNSPECIFIED EditorType = 0
	EditorType_CKEDITOR                EditorType = 1
	EditorType_MARKDOWN                EditorType = 2
)

// Enum value maps for EditorType.
var (
	EditorType_name = map[int32]string{
		0: "EDITOR_TYPE_UNSPECIFIED",
		1: "CKEDITOR",
		2: "MARKDOWN",
	}
	EditorType_value = map[string]int32{
		"EDITOR_TYPE_UNSPECIFIED": 0,
		"CKEDITOR":                1,
		"MARKDOWN":                2,
	}
)

func (x EditorType) Enum() *EditorType {
	p := new(EditorType)
	*p = x
	return p
}

func (x EditorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditorType) Descriptor() protoreflect.EnumDescriptor {
	return file_question_proto_enumTypes[1].Descriptor()
}

func (EditorType) Type() protoreflect.EnumType {
	return &file_question_proto_enumTypes[1]
}

func (x EditorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditorType.Descriptor instead.
func (EditorType) EnumDescriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{1}
}

type Questions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*QuestionData `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *Questions) Reset() {
	*x = Questions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Questions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Questions) ProtoMessage() {}

func (x *Questions) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Questions.ProtoReflect.Descriptor instead.
func (*Questions) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{0}
}

func (x *Questions) GetQuestions() []*QuestionData {
	if x != nil {
		return x.Questions
	}
	return nil
}

type TopicTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug           string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TranslatedName string `protobuf:"bytes,3,opt,name=translated_name,json=translatedName,proto3" json:"translated_name,omitempty"`
}

func (x *TopicTag) Reset() {
	*x = TopicTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicTag) ProtoMessage() {}

func (x *TopicTag) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicTag.ProtoReflect.Descriptor instead.
func (*TopicTag) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{1}
}

func (x *TopicTag) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *TopicTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicTag) GetTranslatedName() string {
	if x != nil {
		return x.TranslatedName
	}
	return ""
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAccepted      string `protobuf:"bytes,1,opt,name=total_accepted,json=totalAccepted,proto3" json:"total_accepted,omitempty"`
	TotalSubmission    string `protobuf:"bytes,2,opt,name=total_submission,json=totalSubmission,proto3" json:"total_submission,omitempty"`
	TotalAcceptedRaw   int32  `protobuf:"varint,3,opt,name=total_accepted_raw,json=totalAcceptedRaw,proto3" json:"total_accepted_raw,omitempty"`
	TotalSubmissionRaw int32  `protobuf:"varint,4,opt,name=total_submission_raw,json=totalSubmissionRaw,proto3" json:"total_submission_raw,omitempty"`
	AcRate             string `protobuf:"bytes,5,opt,name=ac_rate,json=acRate,proto3" json:"ac_rate,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{2}
}

func (x *Stats) GetTotalAccepted() string {
	if x != nil {
		return x.TotalAccepted
	}
	return ""
}

func (x *Stats) GetTotalSubmission() string {
	if x != nil {
		return x.TotalSubmission
	}
	return ""
}

func (x *Stats) GetTotalAcceptedRaw() int32 {
	if x != nil {
		return x.TotalAcceptedRaw
	}
	return 0
}

func (x *Stats) GetTotalSubmissionRaw() int32 {
	if x != nil {
		return x.TotalSubmissionRaw
	}
	return 0
}

func (x *Stats) GetAcRate() string {
	if x != nil {
		return x.AcRate
	}
	return ""
}

type SimilarQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TitleSlug       string `protobuf:"bytes,2,opt,name=title_slug,json=titleSlug,proto3" json:"title_slug,omitempty"`
	Difficulty      string `protobuf:"bytes,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	TranslatedTitle string `protobuf:"bytes,4,opt,name=translated_title,json=translatedTitle,proto3" json:"translated_title,omitempty"`
}

func (x *SimilarQuestion) Reset() {
	*x = SimilarQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimilarQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarQuestion) ProtoMessage() {}

func (x *SimilarQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarQuestion.ProtoReflect.Descriptor instead.
func (*SimilarQuestion) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{3}
}

func (x *SimilarQuestion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SimilarQuestion) GetTitleSlug() string {
	if x != nil {
		return x.TitleSlug
	}
	return ""
}

func (x *SimilarQuestion) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *SimilarQuestion) GetTranslatedTitle() string {
	if x != nil {
		return x.TranslatedTitle
	}
	return ""
}

type MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params []*MetaData_Param `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Return *MetaData_Return  `protobuf:"bytes,3,opt,name=return,proto3" json:"return,omitempty"`
	Output *MetaData_Output  `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	// System design problems related
	SystemDesign bool                  `protobuf:"varint,5,opt,name=system_design,json=systemDesign,proto3" json:"system_design,omitempty"`
	ClassName    string                `protobuf:"bytes,6,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Constructor  *MetaData_Constructor `protobuf:"bytes,7,opt,name=constructor,proto3" json:"constructor,omitempty"`
	Methods      []*MetaData_Method    `protobuf:"bytes,8,rep,name=methods,proto3" json:"methods,omitempty"`
	Manual       bool                  `protobuf:"varint,9,opt,name=manual,proto3" json:"manual,omitempty"`
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4}
}

func (x *MetaData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaData) GetParams() []*MetaData_Param {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *MetaData) GetReturn() *MetaData_Return {
	if x != nil {
		return x.Return
	}
	return nil
}

func (x *MetaData) GetOutput() *MetaData_Output {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *MetaData) GetSystemDesign() bool {
	if x != nil {
		return x.SystemDesign
	}
	return false
}

func (x *MetaData) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *MetaData) GetConstructor() *MetaData_Constructor {
	if x != nil {
		return x.Constructor
	}
	return nil
}

func (x *MetaData) GetMethods() []*MetaData_Method {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *MetaData) GetManual() bool {
	if x != nil {
		return x.Manual
	}
	return false
}

type CodeSnippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LangSlug string `protobuf:"bytes,1,opt,name=lang_slug,json=langSlug,proto3" json:"lang_slug,omitempty"`
	Lang     string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeSnippet) Reset() {
	*x = CodeSnippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeSnippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeSnippet) ProtoMessage() {}

func (x *CodeSnippet) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeSnippet.ProtoReflect.Descriptor instead.
func (*CodeSnippet) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{5}
}

func (x *CodeSnippet) GetLangSlug() string {
	if x != nil {
		return x.LangSlug
	}
	return ""
}

func (x *CodeSnippet) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CodeSnippet) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type QuestionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleSlug            string             `protobuf:"bytes,1,opt,name=title_slug,json=titleSlug,proto3" json:"title_slug,omitempty"`
	QuestionId           string             `protobuf:"bytes,2,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	QuestionFrontendId   string             `protobuf:"bytes,3,opt,name=question_frontend_id,json=questionFrontendId,proto3" json:"question_frontend_id,omitempty"`
	CategoryTitle        CategoryTitle      `protobuf:"varint,4,opt,name=category_title,json=categoryTitle,proto3,enum=CategoryTitle" json:"category_title,omitempty"`
	Title                string             `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	TranslatedTitle      string             `protobuf:"bytes,6,opt,name=translated_title,json=translatedTitle,proto3" json:"translated_title,omitempty"`
	Difficulty           string             `protobuf:"bytes,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	TopicTags            []*TopicTag        `protobuf:"bytes,8,rep,name=topic_tags,json=topicTags,proto3" json:"topic_tags,omitempty"`
	IsPaidOnly           bool               `protobuf:"varint,9,opt,name=is_paid_only,json=isPaidOnly,proto3" json:"is_paid_only,omitempty"`
	Content              string             `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	TranslatedContent    string             `protobuf:"bytes,11,opt,name=translated_content,json=translatedContent,proto3" json:"translated_content,omitempty"`
	Status               string             `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	Stats                *Stats             `protobuf:"bytes,13,opt,name=stats,proto3" json:"stats,omitempty"`
	Hints                []string           `protobuf:"bytes,14,rep,name=hints,proto3" json:"hints,omitempty"`
	SimilarQuestions     []*SimilarQuestion `protobuf:"bytes,15,rep,name=similar_questions,json=similarQuestions,proto3" json:"similar_questions,omitempty"`
	SampleTestCase       string             `protobuf:"bytes,16,opt,name=sample_test_case,json=sampleTestCase,proto3" json:"sample_test_case,omitempty"`
	ExampleTestCases     string             `protobuf:"bytes,17,opt,name=example_test_cases,json=exampleTestCases,proto3" json:"example_test_cases,omitempty"`
	JsonExampleTestcases []string           `protobuf:"bytes,18,rep,name=json_example_testcases,json=jsonExampleTestcases,proto3" json:"json_example_testcases,omitempty"`
	ExampleTestcaseList  []string           `protobuf:"bytes,19,rep,name=example_testcase_list,json=exampleTestcaseList,proto3" json:"example_testcase_list,omitempty"`
	Metadata             *MetaData          `protobuf:"bytes,20,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CodeSnippets         []*CodeSnippet     `protobuf:"bytes,21,rep,name=code_snippets,json=codeSnippets,proto3" json:"code_snippets,omitempty"`
	EditorType           EditorType         `protobuf:"varint,22,opt,name=editor_type,json=editorType,proto3,enum=EditorType" json:"editor_type,omitempty"`
}

func (x *QuestionData) Reset() {
	*x = QuestionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionData) ProtoMessage() {}

func (x *QuestionData) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionData.ProtoReflect.Descriptor instead.
func (*QuestionData) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionData) GetTitleSlug() string {
	if x != nil {
		return x.TitleSlug
	}
	return ""
}

func (x *QuestionData) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *QuestionData) GetQuestionFrontendId() string {
	if x != nil {
		return x.QuestionFrontendId
	}
	return ""
}

func (x *QuestionData) GetCategoryTitle() CategoryTitle {
	if x != nil {
		return x.CategoryTitle
	}
	return CategoryTitle_CATEGORY_TITLE_UNSPECIFIED
}

func (x *QuestionData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionData) GetTranslatedTitle() string {
	if x != nil {
		return x.TranslatedTitle
	}
	return ""
}

func (x *QuestionData) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *QuestionData) GetTopicTags() []*TopicTag {
	if x != nil {
		return x.TopicTags
	}
	return nil
}

func (x *QuestionData) GetIsPaidOnly() bool {
	if x != nil {
		return x.IsPaidOnly
	}
	return false
}

func (x *QuestionData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuestionData) GetTranslatedContent() string {
	if x != nil {
		return x.TranslatedContent
	}
	return ""
}

func (x *QuestionData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuestionData) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *QuestionData) GetHints() []string {
	if x != nil {
		return x.Hints
	}
	return nil
}

func (x *QuestionData) GetSimilarQuestions() []*SimilarQuestion {
	if x != nil {
		return x.SimilarQuestions
	}
	return nil
}

func (x *QuestionData) GetSampleTestCase() string {
	if x != nil {
		return x.SampleTestCase
	}
	return ""
}

func (x *QuestionData) GetExampleTestCases() string {
	if x != nil {
		return x.ExampleTestCases
	}
	return ""
}

func (x *QuestionData) GetJsonExampleTestcases() []string {
	if x != nil {
		return x.JsonExampleTestcases
	}
	return nil
}

func (x *QuestionData) GetExampleTestcaseList() []string {
	if x != nil {
		return x.ExampleTestcaseList
	}
	return nil
}

func (x *QuestionData) GetMetadata() *MetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *QuestionData) GetCodeSnippets() []*CodeSnippet {
	if x != nil {
		return x.CodeSnippets
	}
	return nil
}

func (x *QuestionData) GetEditorType() EditorType {
	if x != nil {
		return x.EditorType
	}
	return EditorType_EDITOR_TYPE_UNSPECIFIED
}

type MetaData_Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *MetaData_Param) Reset() {
	*x = MetaData_Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData_Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData_Param) ProtoMessage() {}

func (x *MetaData_Param) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData_Param.ProtoReflect.Descriptor instead.
func (*MetaData_Param) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MetaData_Param) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaData_Param) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type MetaData_Return struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Dealloc bool   `protobuf:"varint,2,opt,name=dealloc,proto3" json:"dealloc,omitempty"`
}

func (x *MetaData_Return) Reset() {
	*x = MetaData_Return{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData_Return) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData_Return) ProtoMessage() {}

func (x *MetaData_Return) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData_Return.ProtoReflect.Descriptor instead.
func (*MetaData_Return) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4, 1}
}

func (x *MetaData_Return) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MetaData_Return) GetDealloc() bool {
	if x != nil {
		return x.Dealloc
	}
	return false
}

type MetaData_Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParamIndex int32 `protobuf:"varint,1,opt,name=param_index,json=paramIndex,proto3" json:"param_index,omitempty"`
}

func (x *MetaData_Output) Reset() {
	*x = MetaData_Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData_Output) ProtoMessage() {}

func (x *MetaData_Output) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData_Output.ProtoReflect.Descriptor instead.
func (*MetaData_Output) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4, 2}
}

func (x *MetaData_Output) GetParamIndex() int32 {
	if x != nil {
		return x.ParamIndex
	}
	return 0
}

type MetaData_Constructor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*MetaData_Param `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *MetaData_Constructor) Reset() {
	*x = MetaData_Constructor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData_Constructor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData_Constructor) ProtoMessage() {}

func (x *MetaData_Constructor) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData_Constructor.ProtoReflect.Descriptor instead.
func (*MetaData_Constructor) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4, 3}
}

func (x *MetaData_Constructor) GetParams() []*MetaData_Param {
	if x != nil {
		return x.Params
	}
	return nil
}

type MetaData_Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params []*MetaData_Param `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Return *MetaData_Return  `protobuf:"bytes,3,opt,name=return,proto3" json:"return,omitempty"`
}

func (x *MetaData_Method) Reset() {
	*x = MetaData_Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData_Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData_Method) ProtoMessage() {}

func (x *MetaData_Method) ProtoReflect() protoreflect.Message {
	mi := &file_question_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData_Method.ProtoReflect.Descriptor instead.
func (*MetaData_Method) Descriptor() ([]byte, []int) {
	return file_question_proto_rawDescGZIP(), []int{4, 4}
}

func (x *MetaData_Method) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaData_Method) GetParams() []*MetaData_Param {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *MetaData_Method) GetReturn() *MetaData_Return {
	if x != nil {
		return x.Return
	}
	return nil
}

var File_question_proto protoreflect.FileDescriptor

var file_question_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x38, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x08, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x61,
	0x77, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x52, 0x61, 0x74, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x0f, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x99, 0x05, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x1a,
	0x2f, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x1a, 0x36, 0x0a, 0x06, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x1a, 0x29, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x1a, 0x36, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x6f, 0x0a, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x52, 0x0a, 0x0b,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x82, 0x07, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x6c, 0x75, 0x67,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0a, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x50,
	0x61, 0x69, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x11,
	0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x79, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49,
	0x54, 0x48, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41,
	0x53, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x41, 0x56, 0x41, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x05,
	0x2a, 0x45, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x4b, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x52,
	0x4b, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x31, 0x37, 0x38, 0x2f, 0x6c, 0x65, 0x65, 0x74, 0x67, 0x6f,
	0x2f, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x3b, 0x6c, 0x65, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_question_proto_rawDescOnce sync.Once
	file_question_proto_rawDescData = file_question_proto_rawDesc
)

func file_question_proto_rawDescGZIP() []byte {
	file_question_proto_rawDescOnce.Do(func() {
		file_question_proto_rawDescData = protoimpl.X.CompressGZIP(file_question_proto_rawDescData)
	})
	return file_question_proto_rawDescData
}

var file_question_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_question_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_question_proto_goTypes = []interface{}{
	(CategoryTitle)(0),           // 0: CategoryTitle
	(EditorType)(0),              // 1: EditorType
	(*Questions)(nil),            // 2: Questions
	(*TopicTag)(nil),             // 3: TopicTag
	(*Stats)(nil),                // 4: Stats
	(*SimilarQuestion)(nil),      // 5: SimilarQuestion
	(*MetaData)(nil),             // 6: MetaData
	(*CodeSnippet)(nil),          // 7: CodeSnippet
	(*QuestionData)(nil),         // 8: QuestionData
	(*MetaData_Param)(nil),       // 9: MetaData.Param
	(*MetaData_Return)(nil),      // 10: MetaData.Return
	(*MetaData_Output)(nil),      // 11: MetaData.Output
	(*MetaData_Constructor)(nil), // 12: MetaData.Constructor
	(*MetaData_Method)(nil),      // 13: MetaData.Method
}
var file_question_proto_depIdxs = []int32{
	8,  // 0: Questions.questions:type_name -> QuestionData
	9,  // 1: MetaData.params:type_name -> MetaData.Param
	10, // 2: MetaData.return:type_name -> MetaData.Return
	11, // 3: MetaData.output:type_name -> MetaData.Output
	12, // 4: MetaData.constructor:type_name -> MetaData.Constructor
	13, // 5: MetaData.methods:type_name -> MetaData.Method
	0,  // 6: QuestionData.category_title:type_name -> CategoryTitle
	3,  // 7: QuestionData.topic_tags:type_name -> TopicTag
	4,  // 8: QuestionData.stats:type_name -> Stats
	5,  // 9: QuestionData.similar_questions:type_name -> SimilarQuestion
	6,  // 10: QuestionData.metadata:type_name -> MetaData
	7,  // 11: QuestionData.code_snippets:type_name -> CodeSnippet
	1,  // 12: QuestionData.editor_type:type_name -> EditorType
	9,  // 13: MetaData.Constructor.params:type_name -> MetaData.Param
	9,  // 14: MetaData.Method.params:type_name -> MetaData.Param
	10, // 15: MetaData.Method.return:type_name -> MetaData.Return
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_question_proto_init() }
func file_question_proto_init() {
	if File_question_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_question_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Questions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimilarQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeSnippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData_Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData_Return); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData_Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData_Constructor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData_Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_question_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_question_proto_goTypes,
		DependencyIndexes: file_question_proto_depIdxs,
		EnumInfos:         file_question_proto_enumTypes,
		MessageInfos:      file_question_proto_msgTypes,
	}.Build()
	File_question_proto = out.File
	file_question_proto_rawDesc = nil
	file_question_proto_goTypes = nil
	file_question_proto_depIdxs = nil
}
